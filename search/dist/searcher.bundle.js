function n(n,t){return new class{constructor(n){this.value=n}valueOf(){return t}subType(){switch(t){case"null":case"undefined":case"boolean":case"string":case"symbol":default:return"";case"number":return Number.isInteger(n)?"integer":Number.isNaN(n)?"NaN":n==1/0?"Infinity":"float";case"function":return"Function"==n.constructor.name?n.toString().match(/^function/g)?.length?"Function":n.toString().match(/^class/g)?.length?"Class":"Arrow":n.constructor.name}}name(){return"function"==t?n.name:""}}(n)}const t={string:(n,t)=>t.includes(n),array:(n,t)=>t.some((t=>t.includes(n))),Object:function(n,t){for(const e in t){if(e.includes(n))return!0;if(t[e].includes(n))return!0}return!1}};function e(e){return{in:function(r){const u=function(t){if(null===t)return n(t,"null");const e=typeof t;return n(t,"object"!==e?e:t?.constructor?.name??"Object")}(r);return t[u]?.(e,r)??!1}}}export{e as searchString};
